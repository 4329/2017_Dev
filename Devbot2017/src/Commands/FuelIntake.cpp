// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "FuelIntake.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

FuelIntake::FuelIntake(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::intake.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void FuelIntake::Initialize() {

}

// Called repeatedly when this Command is scheduled to run
void FuelIntake::Execute() {
	//get left trigger axis value
	float left_t = Robot::oi->GetAxisValue(Robot::oi->getRobotOperator(), OI::Xbox_Axis::Xbox_Axis_Left_Trigger);
	float right_t = Robot::oi->GetAxisValue(Robot::oi->getRobotOperator(), OI::Xbox_Axis::Xbox_Axis_Right_Trigger);

	if (right_t != 0) {
		Robot::intake->fuel_intake(1);	//will be at max speed for now
	}
	else if (left_t != 0) {
		Robot::intake->fuel_outtake(1);	//will be at max speed for now
										//inverts motor direction in the intake susystem file
	}
	else {
		Robot::intake->StopMotor();
	}
}

// Make this return true when this Command no longer needs to run execute()
bool FuelIntake::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void FuelIntake::End() {
	Robot::intake->StopMotor();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void FuelIntake::Interrupted() {

}
