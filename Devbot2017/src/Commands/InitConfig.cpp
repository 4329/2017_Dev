// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "InitConfig.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

InitConfig::InitConfig(): InstantCommand() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called once when this command runs
void InitConfig::Initialize() {
    Preferences::GetInstance()->PutFloat("Indexer::RPM",500);
    Preferences::GetInstance()->PutBoolean("Indexer::DirReversed",false);
    Preferences::GetInstance()->PutBoolean("Indexer::SensorReversed",false);

    Preferences::GetInstance()->PutDouble("Indexer::P",0.1);
    Preferences::GetInstance()->PutDouble("Indexer::I",0.0);
    Preferences::GetInstance()->PutDouble("Indexer::D",0.0);

	Preferences::GetInstance()->PutInt("Indexer::EncoderPulses",4096);
	Preferences::GetInstance()->PutInt("Indexer::AllowableCLerr",5);
	Preferences::GetInstance()->PutDouble("Indexer::CLRamp",12.0);

    Preferences::GetInstance()->PutFloat("Shooter::RPM",3500);
    Preferences::GetInstance()->PutBoolean("Shooter::DirReversed",false);
    Preferences::GetInstance()->PutBoolean("Shooter::SensorReversed",false);

    Preferences::GetInstance()->PutDouble("Shooter::P",0.015);
    Preferences::GetInstance()->PutDouble("Shooter::I",0.0);
    Preferences::GetInstance()->PutDouble("Shooter::D",0.3);

	Preferences::GetInstance()->PutInt("Shooter::EncoderPulses",4096);
	Preferences::GetInstance()->PutInt("Shooter::AllowableCLerr",5);
	Preferences::GetInstance()->PutDouble("Shooter::CLRamp",12.0);


	double now = GetTime();
	std::cout << "4329_LOG:" << now << ":Configure Init" << std::endl;
}

